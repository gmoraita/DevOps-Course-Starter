services:
- docker

branches:
  only:
    - master
    - module_11


before_script:
- echo "Test the TODO list"
- docker build --target testing-offline --tag todo-app:devops-course-starter_todoapp-test-offline .
- docker run --env-file .env.test todo-app:devops-course-starter_todoapp-test-offline
- docker build --target testing-online --tag todo-app:devops-course-starter_todoapp-test-online .
- echo $DB_CONNECTION_STRING
- docker run  -e DB_CONNECTION_STRING=$DB_CONNECTION_STRING todo-app:devops-course-starter_todoapp-test-online
      
script: 
- echo "Build the TODO list"
- docker build --target production --tag $DOCKER_USER/todo-app:$TRAVIS_COMMIT .
- docker build --target production --tag $DOCKER_USER/todo-app:latest .

- echo "Push the TODO list to Docker Hub"
- echo $DOCKER_PWD | docker login --username $DOCKER_USER --password-stdin
- docker push $DOCKER_USER/todo-app:$TRAVIS_COMMIT
- docker push $DOCKER_USER/todo-app:latest

- echo "Push the TODO list to Heroku"
- docker pull $DOCKER_USER/todo-app:$TRAVIS_COMMIT
- docker tag $DOCKER_USER/todo-app:$TRAVIS_COMMIT registry.heroku.com/georgestodoapp/web
- heroku container:login
- docker push registry.heroku.com/georgestodoapp/web
- heroku container:release web -a georgestodoapp


env:
  global:
    - secure: "bUPC3kaasZrLwEfz4hOD3T5NV+GnW/TSlNdtq6ybzwfCiCK9hDHtoePhHpLGmc2lChQ0DbKlDpoke1bUXFKuCHWB33oUlDRHBXYRiLDppFQoHzvD8gDzd290kUjQiBMfeie2xxyl46wTax3pf8aI+l66zxR7U4eeRm9cIKt8wRHy+5SQ0YcWnB+mwUzy6ufAWwCSsA6tHIbPlRTTE8P40spdTLegp2ssBpxHf1JYEb144yZV8ttqoEe2/5W5zF5Kp+7qX4VuWnuthpc8FodfE67Nu/d5PvWOxQK/CMSpCyXXP6vLqKg6EcLVHO/F5kpsxK9nebw1lW2BjXv59cKp1dqQ9UyY3tnRIvY+yd3Lg7JC22d1UMrjktd2msslMWGmm/HyLGqLHw9S+RORmREr/DaYJHtsQGDtn711fdcVZOcI0k90shFw4f5pqjQSa1FvMykDntjRNEgky0ihj3cY9GcStuAqZYizA+Yv+MlnqaQ4E1DlVPnd3JMFwCFHiSwKhqIkGMIXFOiF6Nr0R9M19sc6MFZwMLtobKBfGw/vc5PzGMiwMEu/70OUhbDMi1mIOHbbXcCnkfehqJNiKEmAy3Zcn+KpK34Myer3QTEQXpN492idmqbvjeMcdAhyWXAqYowWiuTgHLuvlv4Q+MqiV2ZQHKfQZpr8T7SjOqM3cNE="
    - secure: "Q+LkmbQODaPDwPViC+uClnErcXPN1NtV/XPkVaB7E3JeUl2jXAsHz5tCQDQR0RAh8ril3Y4e0tDuQdlYiDxZrvXATX3hBbTy81wd2xPelBCuCpClXUJEQJCsPGtOASfab2poC0IhekvWz31AppPGSxMR2v5h3j+xEw5XY30Q0Rl1HclngyCn3bGFA9RZzr3LScqfaD6iiwjYzCZZnXmgK9ugpU4iEqkpBRPT7N0FSXXWmj3COJRUfeQNEkkUJ01D/RxjyU+xeWtLdzdsEakMD0txGXIY7aaPnZNLpWJr5Bo4bqu+DNACT2NWpoq/d6YurNG6OOksaVbhbwS6NNNIxMlJ/WUpKDYlzxcMkUpqGVRy0gHGo40JwszJ5FJAJqFRr042XlSv1W+L+DVWnCBbPgEWuGtLBbVZ+UCuDEzdr+id403LolN/23rS0MgJKQknd6FHgNlimjxwFWNsx5ky1ZvSliwrI1PRKCafuxUUnzPRw2Eug0LcGYAHm1gIOXTvKO2bZVu70wn2Jh1YjezhsQHIMo0wm3fYDFrspmKYliqxFBxN9yaMvSBL284vmzND13gyQ50ycHpev6ZzQ54Kbfb/Tco5WfxD6JLLrguJgUNIx4woEjHqz1Lgh6qrlUwPl5EUzgZLyVLzqFvPuvji6XtJm4HAHHCROFXS9b5er5w="
    - secure: "aZznTD78yfCR5HXOwk2ci5hFOEcYkG+IRTiRhm2OQ1u6XGRXSQpukwo8GlyzW2KCEYetiee0P6H3QCpRu4xSE3S+2j2hjG1eUFaRM9AKtxbhDbUHD/yEEdVv6qG2WlbUIObdism8h8YTssG5gQ+58uWrDPve4cpnHX8q5FatcGITk6+yRDSNvwPA6FIVfDKDUgdc0/OkibxnxCsq9QE9CF/qKQKk+FI7Da9+JHhhZ4lHRE3UnALTthK3AHLhuZuJuSnnnuIAkTsNPnSYk28OPV2YFb8nV7twyKvF7XpXpE0yGDxqa43ixSlJg5TXWRdAvn9KJPK/mQ1hjEL2BF79y76L3jSeSp1I9L3C8BIaCJFUiv8HYljZvrn+XmkQuMrkQXfccWZsL8eNXDPa/o4nUkrWneKmzJ3inAiKZsQ+DxMH87be4SB8qQn8JKc+FFKmKrDFI+Nm3D+dCUIykcbOdIAzYMN4viI+YrZN15c9HlNJUlPK1jOVLZbWoLBRiwF6Hv6XlV/+DPcn7WWwt3lwlLachtG8fkxqxetm0xzps7exTnoz97XEhSYotlw3m9mPeikd7o3/f7jpfgdo4unKD0lzbhmnhFKMT0YvYQfwaIGpC6VC44GBdvyqJrVowWWa95Pzx/i2R/4mtg+bYFyomKvpKwI+CiVYkK1OiWA0VeA="
    - secure: "kButKHV/06+js+qCTp3XDzh/J2QXKy+B4856zH4EsldqsptZL7wu/q+lGGrJU+XVsZhL3SbGEikDHCrMaI1HIo3ahjVuqWYmaTKwR3JIbu6sCP7GZoY61Rvni/+/m2v8VRkNyt4ZK8X/km2zHV8IPnA0Hxt7yds6yU7MyLEi7HeKbwDRFyG/Y30CnAE59mNGxVo4Ff6Ma3qe7F21XPRynlhAz3dy0qIB8JXv2VkuSp29i2LLWPGAB3krrH843xt1nBoLoiXJAdZe4w4kT8ZRLGfqEBlixLetEbNpNIDsikfI3XwhuHie8ofsESZ/CG7Xw4+p5GIan87NSf0Ph56nQA8kAXeo5c0NRORGiNAEuMTARw2NvASePIZmvsDexqoLlt6m+xFBtWrsKypKpVxvzVxpMk+PKnu16UMx6WsFeZESNGsTALgf6iGhxjtWfx13WGNNmpjIEgaoNa6XlVK/d2l3m/onYTG/fwQwsbf3KzG6uUX2ZIzwrlvQ7ndPr2ZsFGar/YxEYuaulAURN6rrOgzaePiEtAGLP57hSr3SsgwjnArb0h+Vp1iZJG7Pdy85Bz/QQqo58Vag6dgOa2whRNxYorxizfPGUd9TaiBXDJxyYL2ZaJnkIirgoEqWrWBQxxti7RrVy6vmWi6dhUfsWIgn9uFpUH67v72+seEFyYI="
